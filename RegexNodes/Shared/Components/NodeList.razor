@using RegexNodes.Shared.NodeTypes;
@inject INodeHandler NodeHandler
@inject INodeDragService NodeDragService

    <div class="viewport sidebar panel">
        <div class="viewport-title-bar">
            <h1>Nodes</h1>
        </div>
        
        @foreach (var node in exampleNodes)
        {
            <NodeListPreview Data="node"/>
        }
    </div>

@functions{
    protected Type[] nodeTypes { get; set; }
    List<INode> exampleNodes { get; set; } = new List<INode>
    {
        new ExactString(),
        new WildcardNode(),
        new CharSet(),
        new AnchorNode(),
        new WhitespaceNode(),
        new CommentNode(),
        new OrNode(),
        new ConcatNode(),
        new GroupNode(),
        new Quantifier(),
        new Backreference(),
        new Lookaround(),
        new IfElseNode(),
        new FlagNode(),
        new OutputNode(),
    };

    void AddNode(Type type)
    {
        INode node = (INode)Activator.CreateInstance(type);
        NodeHandler.AddNode(node, refreshIndex: true);
        //NodeDragService.OnStartNodeDrag(node, e);
    }
}
